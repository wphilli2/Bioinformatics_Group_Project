}
}
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()>y){
print("Lower")
}else{
if(readline()<y){
print("Higher")
}else{
print("Correct!")
}
}
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()>y){
print("Lower")
}else{
print("Higher")
}
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()>y){
print("Lower")
}else{
print("Higher")
}
}
print("Guess again:")
}
guessnum
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()>y){
print("Lower")
}else{
print("Higher")
print("Guess again:")
}
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
if(readline()==y){
print("Correct!")
}else{while (readline()!=y) {
if(readline()>y){
print("Lower")
}else{
print("Higher")
print("Guess again:")
}
}
}}
guessnum(50)
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()<y){
print("Higher")
}else{
print("Lower")
}
}
if(readline()==y){
print("Correct!")
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
while (readline()!=y) {
print("Guess:")
if(readline()<y){
print("Higher")
}else{
print("Lower")
}
}
if(readline()==y){
print("Correct!")
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
print("Guess:")
if(readline()<y){
print("Higher")
}else{
print("Lower")
}
}
if(readline()==y){
print("Correct!")
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
print("Guess:")
while (readline()!=y) {
if(readline()<y){
print("Higher")
}else{
print("Lower")
}
}
if(readline()==y){
print("Correct!")
}
}
guessnum(50)
guessnum=function(x){
y=x
print("I'm thinking of a number between 1 and 100")
readline(prompt = "Guess:")
while (readline()!=y) {
if(readline()<y){
print("Higher")
readline(prompt = "Guess again:")
}else{
print("Lower")
readline(prompt = "Guess again")
}
}
if(readline()==y){
print("Correct!")
}
}
guessnum(50)
library(deSolve)
library(ggplot2)
install.packages(deSolve)
install.packages("deSolve")
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
N=y
r=p[1]
K=p[2]
dNdt=r*(1-N/K)*N
return(list(dNdt))
}
params=c(0.2,100)
N0=2
times=1:100
modelSim=ode(y=N0,times = times,func = ddSim,parms = params)
modelOutput=data.frame(time=modelSim[,1], N=modelSim[,2])
ggplot(modelOutput, aes(x=times,y=N))+geom_line()+theme_classic()
library(deSolve)
library(ggplot2)
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(listc(dNndt,dNtdt))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=2
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSimN,parms = params2)
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(dNndt,dNtdt))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=2
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params3)
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params4)
modelOutput2=data.frame(time=modelSim2[,1], N=modelSim2[,2])
modelOutput3=data.frame(time=modelSim2[,1], N=modelSim3[,2])
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(dNndt,dNtdt))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=2
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim3=ode(y=N0,times = times,func = ddSim,parms = params3)
modelSim4=ode(y=N0,times = times,func = ddSim,parms = params4)
modelOutput2=data.frame(time=modelSim2[,1], N=modelSim2[,2])
modelOutput3=data.frame(time=modelSim2[,1], N=modelSim3[,2])
modelOutput4=data.frame(time=modelSim4[,1], N=modelSim4[,2])
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line()+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line()+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line()+theme_classic()
a
modelSim2
modelSim3
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(c(dNndt,dNtdt)))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=2
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim3=ode(y=N0,times = times,func = ddSim,parms = params3)
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(c(dNndt,dNtdt)))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=vector(2,2)
times=1:100
params4=c(10,10,0.5,0.5,2,0.5)
N0=c(2,2)
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim3=ode(y=N0,times = times,func = ddSim,parms = params3)
modelSim4=ode(y=N0,times = times,func = ddSim,parms = params4)
modelOutput2=data.frame(time=modelSim2[,1], N=modelSim2[,2])
modelOutput3=data.frame(time=modelSim2[,1], N=modelSim3[,2])
modelOutput4=data.frame(time=modelSim4[,1], N=modelSim4[,2])
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line()+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line()+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line()+theme_classic()
modelSim2
modelSim3
modelSim4
b
d
a
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line(aes(x=times,y=modelSim2[,3]))+geom_line(aes(x=times,y=modelSim2[,4]))+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line(aes(x=times,y=modelSim3[,3]))+geom_line(aes(x=times,y=modelSim3[,4]))+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelSim4[,3]), color="Red")+geom_line(aes(x=times,y=modelSim4[,4]), color="black")+theme_classic()
a
b
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(c(dNndt,dNtdt)))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=c(2,2)
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim3=ode(y=N0,times = times,func = ddSim,parms = params3)
modelSim4=ode(y=N0,times = times,func = ddSim,parms = params4)
modelOutput2=data.frame(time=modelSim2[,1], N=modelSim2[,2])
modelOutput3=data.frame(time=modelSim2[,1], N=modelSim3[,2])
modelOutput4=data.frame(time=modelSim4[,1], N=modelSim4[,2])
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput2[,3]))+geom_line(aes(x=times,y=modelOutput2[,4]))+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput3[,3]))+geom_line(aes(x=times,y=modelOutput3[,4]))+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput4[,3]))+geom_line(aes(x=times,y=modelOutput4[,4]))+theme_classic()
a
modelOutput2
modelSim2
library(deSolve)
library(ggplot2)
ddSim<-function(t,y,p){
Nn=y[1]
Nt=y[2]
Kn=p[1]
Kt=p[2]
rn=p[3]
rt=p[4]
ant=p[5]
atn=p[6]
dNndt=rn*(1-(Nn+ant*Nt)/Kn)*Nn
dNtdt=rt*(1-(Nt+atn*Nn)/Kt)*Nt
return(list(c(dNndt,dNtdt)))
}
params2=c(10,10,0.5,0.5,0.5,2)
params3=c(10,10,0.5,0.5,0.5,0.5)
params4=c(10,10,0.5,0.5,2,0.5)
N0=c(2,2)
times=1:100
modelSim2=ode(y=N0,times = times,func = ddSim,parms = params2)
modelSim3=ode(y=N0,times = times,func = ddSim,parms = params3)
modelSim4=ode(y=N0,times = times,func = ddSim,parms = params4)
modelOutput2=data.frame(time=modelSim2[,1], Nn=modelSim2[,3], Nt=modelSim2[,4])
modelOutput2=data.frame(time=modelSim2[,1], Nn=modelSim2[,2], Nt=modelSim2[,3])
modelOutput3=data.frame(time=modelSim2[,1], Nn=modelSim3[,2], Nt=modelSim3[,3])
modelOutput4=data.frame(time=modelSim4[,1], Nn=modelSim4[,2], Nt=modelSim4[,3])
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput2[,3]))+geom_line(aes(x=times,y=modelOutput2[,4]))+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput3[,3]))+geom_line(aes(x=times,y=modelOutput3[,4]))+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput4[,3]))+geom_line(aes(x=times,y=modelOutput4[,4]))+theme_classic()
a
modelOutput2
modelOutput3
modelOutput4
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput2[,2]))+geom_line(aes(x=times,y=modelOutput2[,3]))+theme_classic()
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput3[,2]))+geom_line(aes(x=times,y=modelOutput3[,3]))+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput4[,2]))+geom_line(aes(x=times,y=modelOutput4[,3]))+theme_classic()
a
b
d
modelOutput3
?geom_line
?color
a=ggplot(modelOutput2, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput2[,2]), color="black")+geom_line(aes(x=times,y=modelOutput2[,3]), color="red")+theme_classic()
a
b=ggplot(modelOutput3, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput3[,2]), color="black")+geom_line(aes(x=times,y=modelOutput3[,3]), color="red")+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput4[,2]), color="black")+geom_line(aes(x=times,y=modelOutput4[,3]) color="red")+theme_classic()
d=ggplot(modelOutput4, aes(x=times,y=N))+geom_line(aes(x=times,y=modelOutput4[,2]), color="black")+geom_line(aes(x=times,y=modelOutput4[,3]), color="red")+theme_classic()
a
b
d
setwd ("/Users/willphillips/Desktop/Introduction to Biocomputing/Bioinformatics")
data=read.table(sigmaroseo.txt)
data=read.table("sigmaroseo.txt")
data
library(ggplot2)
a=ggplot(data = data, aes(x=data$V1,y=data$V6))
a+geom_histogram()
a+geom_bar()
a=ggplot(data = data)
a+geom_histogram()
dat=data[data$V1,data$V6]
dat=data[ , c(data$V1,data$V6)]
dat=data[ ,c(data$V1,data$V6)]
dat=data[ ,c(data$V1 data$V6)]
dat=data[ ,c(data$V1,data$V6)]
dat=c(data$V1,data$V6)
dat
dat=data[,data$V1]
dat
dat=data$V1
dat
dat=data.frame(data[,c(data$V1,data$V6)])
dat=data[,c(1,6)]
dat
a=ggplot(data = dat)
a+geom_histogram()
a+geom_histogram(x=dat$V1)
a+geom_histogram(aes(x=dat$V1))
a+geom_bar()
a=ggplot(data = dat, aes(x=dat$V1,y=dat$V6))
a+geom_bar()
ggplot(dat,aes(dat$V6))+geom_histogram()
ggplot(dat,aes(dat$V6))+geom_histogram()
dat
setwd("/Users/willphillips/Desktop/Introduction to Biocomputing/Bioinformatics/Project/Bioinformatics_Group_Project")
1
T1=read.table("Transcript1hits.csv")
T1
read.table("Transcript1hits.csv")
T1=read.table("Transcript1hits.csv")
L1=T1[,2]
T1[,2]
T1[,T1$2]
T1=read.csv("Transcript1hits.csv")
T1
L1=T1[,2]
L1
help for
for -h
ls
cd ..
ls
y=0
"y"
Tprint(y)
print("T",y)
print("T","y")
help print
help("print")
print(T,y)
y=0
print(T,y)
print("T",y)
print(y)
Tprint(y)
x=T print(y)
x="T print(y)"
x
x=T
x
x=A
x
x=print(T,y)
x=print(A,y)
x=print("A",y)
z=$(print(y))
$(print(y))
($print(y))
print(y)
echo(Tprint(y))
print(Tprint(y))
print(Tpaste(y))
print(T,paste(y))
print("T",paste(y))
paste("T",y)
paste0("T",y)
name=paste0("T",y)
x=read.csv(i)
paste0("T",y)=x[,2]
tophits=data.frame(nrow(6),ncol(2))
tophits=data.frame(nrow(6),ncol(2),colnames("Gene","Top Hit"))
setwd("/Users/willphillips/Desktop/Introduction to Biocomputing/Bioinformatics/Project/Bioinformatics_Group_Project")
tophits=data.frame(nrow(6),ncol(2),colnames("Gene","Top Hit"))
for (i in *.csv) {
y=1
x=read.csv(i)
head(x[,2])=tophits$2[y]
i=tophits$1[y]
}
tophits
