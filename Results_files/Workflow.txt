First did BLAST, uploaded uniquetranscripts.fasta (in Project_files),
Next, from BLAST list, downloaded top hits for each of the transcripts and saved as Transcript(#).hits in Results_files/Transcripts.
Next, used tophits.sh script to take the top hit from each Transcript(#).hits file and appended it to Hits.txt in Results_file/Transcripts. Hits.txt contains the top hit for each of the six transcripts. 
From Hits.txt, took the top nucleotide hit for each transcript and did blastx on NCBI BLAST (This is a nucleotide to protein blast; we have nucleotide hits, but we can get the protein matching the top nucleotide hit using blastx). Search the corresponding protein in the NCBI protein database and take 10  proteins from each unique transcript from mus musculus and closely related organisms. *all transcripts except for six were searched in rodents; 6 was searched in the larger class of mammals
 Put the protein lists into Results_files/Protein_hits, labelled with the protein name followed by trans# 
Moved the protein hit files to remote machine in order to use muscle function. On remote machine, created alignment files for each transcript using muscle. 
Still in the remote machine, used hmmerbuild to build a hidden markov model for each transcript's protein hit alignments. Saved a Hidden Markov Model profile for each of the transcripts' protein hits
Again in the remote machine, used the newly created Hidden Markov Model profiles for each transcript and hmmsearch to search the 2 control and the 2 obesity files provided in Project_files. Will have to scp these files to the remote machine. Then create unique files for each transcript HMM and the number of hits found in the hmmsearch.
scp the hit data found from the hmmsearch to local machine and use R and ggplot to graphically compare the hits between the transcripts

Re-searched the protein for transcript 10, Ptpn5, and took 10 primate proteins rather than rodent proteins. Put this list of proteins in Results_file/Ptpn5_primate/ Moved the fasta file to the remote machine and used muscle to create alignment. Then used hmmbuild to make a new HMM from this alilgnment. Finally, used Ptpn5_primate_loop.sh to search the Control and Obese protein files (in Project_files) to get the hits.
